--- a/net/minecraft/client/RecipeBookCategories.java
+++ b/net/minecraft/client/RecipeBookCategories.java
@@ -12,7 +_,7 @@
 import net.minecraftforge.api.distmarker.OnlyIn;
 
 @OnlyIn(Dist.CLIENT)
-public enum RecipeBookCategories {
+public enum RecipeBookCategories implements net.minecraftforge.common.IExtensibleEnum {
     CRAFTING_SEARCH(new ItemStack(Items.COMPASS)),
     CRAFTING_BUILDING_BLOCKS(new ItemStack(Blocks.BRICKS)),
     CRAFTING_REDSTONE(new ItemStack(Items.REDSTONE)),
@@ -38,7 +_,7 @@
     public static final List<RecipeBookCategories> CRAFTING_CATEGORIES = ImmutableList.of(
         CRAFTING_SEARCH, CRAFTING_EQUIPMENT, CRAFTING_BUILDING_BLOCKS, CRAFTING_MISC, CRAFTING_REDSTONE
     );
-    public static final Map<RecipeBookCategories, List<RecipeBookCategories>> AGGREGATE_CATEGORIES = ImmutableMap.of(
+    public static final Map<RecipeBookCategories, List<RecipeBookCategories>> AGGREGATE_CATEGORIES = net.minecraftforge.client.RecipeBookManager.getAggregateCategories(ImmutableMap.of(
         CRAFTING_SEARCH,
         ImmutableList.of(CRAFTING_EQUIPMENT, CRAFTING_BUILDING_BLOCKS, CRAFTING_MISC, CRAFTING_REDSTONE),
         FURNACE_SEARCH,
@@ -47,7 +_,7 @@
         ImmutableList.of(BLAST_FURNACE_BLOCKS, BLAST_FURNACE_MISC),
         SMOKER_SEARCH,
         ImmutableList.of(SMOKER_FOOD)
-    );
+    ));
     private final List<ItemStack> itemIcons;
 
     private RecipeBookCategories(final ItemStack... p_92267_) {
@@ -60,10 +_,15 @@
             case FURNACE -> FURNACE_CATEGORIES;
             case BLAST_FURNACE -> BLAST_FURNACE_CATEGORIES;
             case SMOKER -> SMOKER_CATEGORIES;
+            default -> net.minecraftforge.client.RecipeBookManager.getCustomCategoriesOrEmpty(p_92270_);
         };
     }
 
     public List<ItemStack> getIconItems() {
         return this.itemIcons;
+    }
+
+    public static RecipeBookCategories create(String name, ItemStack... icons) {
+        throw new IllegalStateException("Enum not extended");
     }
 }
