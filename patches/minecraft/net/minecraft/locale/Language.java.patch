--- a/net/minecraft/locale/Language.java
+++ b/net/minecraft/locale/Language.java
@@ -37,7 +_,8 @@
         Builder<String, String> builder = ImmutableMap.builder();
         BiConsumer<String, String> biconsumer = builder::put;
         parseTranslations(biconsumer, "/assets/minecraft/lang/en_us.json");
-        final Map<String, String> map = builder.build();
+        final Map<String, String> map = new java.util.HashMap<>(builder.build());
+        net.minecraftforge.server.LanguageHook.captureLanguageMap(map);
         return new Language() {
             @Override
             public String getOrDefault(String p_128127_, String p_265421_) {
@@ -62,6 +_,11 @@
                         )
                         .isPresent();
             }
+
+            @Override
+            public Map<String, String> getLanguageData() {
+                return map;
+            }
         };
     }
 
@@ -89,6 +_,8 @@
     public static void inject(Language p_128115_) {
         instance = p_128115_;
     }
+
+    public Map<String, String> getLanguageData() { return Map.of(); }
 
     public String getOrDefault(String p_128111_) {
         return this.getOrDefault(p_128111_, p_128111_);
